name: Build & Deploy Docs

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # install working version of XMLDoc2Markdown
      - name: Install XMLDoc2Markdown
        run: |
          dotnet tool install -g XMLDoc2Markdown --version 5.0.0
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Build all projects
        run: |
          for proj in $(find src -name '*.csproj'); do
            echo "Building $proj"
            dotnet build "$proj" -c Debug
          done

      - name: Generate API Markdown
        run: |
          mkdir -p docs/api
          for proj in $(find src -name '*.csproj'); do
            projdir=$(dirname "$proj")
            projname=$(basename "$proj" .csproj)
            dll="$projdir/bin/Debug/net9.0/$projname.dll"
            outdir="docs/api/$projname"
            if [ -f "$dll" ]; then
              echo "Generating Markdown for $projname"
              xmldoc2md "$dll" -o "$outdir" --flat --github-pages
            else
              echo "⚠️ Skipping $projname (no DLL found)"
            fi
          done

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
